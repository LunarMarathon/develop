name: Test & Build

on:
  push:
    branches: [ "master" ]

jobs:
  run-smoke-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: "8.0"
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-autoloader

    - name: Set environment to testing
      run: echo "ENV=testing" > .env
    
    - name: Output debug information
      run: php hyde debug

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/pest
      env:
        ENV: testing      

  test-coverage:

    runs-on: ubuntu-latest
    needs: run-smoke-tests

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: "8.0"
        coverage: xdebug
        extensions: fileinfo
    - uses: actions/checkout@v3
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install Composer Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-autoloader

    - name: Set environment to testing
      run: echo "ENV=testing" > .env
    
    - name: Output debug information
      run: php hyde debug

    - name: Execute tests (Unit and Feature tests) via PHPUnit with coverage
      run: vendor/bin/pest --coverage --coverage-text=build/coverage/report.txt --colors=always --coverage-clover build/coverage/clover.xml --coverage-cobertura build/coverage/cobertura.xml --coverage-crap4j build/coverage/crap4j.xml --coverage-xml build/coverage/coverage-xml --log-junit build/junit.xml  --coverage-html build/coverage/html
      env:
        ENV: testing

    - uses: codecov/codecov-action@v2
      with:
        files: ./build/coverage/clover.xml,./build/coverage/crap4j.xml,./build/coverage/report.txt,./build/junit.xml
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v1
      with:
        name: "coverage"
        path: "build/coverage"


  build-hydefront-assets:

    runs-on: ubuntu-latest
    needs: run-smoke-tests

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        cache: 'npm'

    - name: Install Node.js dependencies
      working-directory: 'packages/hydefront'
      run: npm ci

    - name: Build assets for production
      working-directory: 'packages/hydefront'
      run: npm run prod

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: 'hydefront'
        path: 'packages/hydefront/dist'

    - name: Commit changes
      uses: EndBug/add-and-commit@v9 
      with:
        add: 'packages/hydefront/dist'
        message: 'Compile HydeFront assets for production'


  build-tailwindcss:

    runs-on: ubuntu-latest
    needs: run-smoke-tests

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        cache: 'npm'

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build assets for production
      run: npm run prod

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: '_media'
        path: '_media'

    - name: Commit changes
      uses: EndBug/add-and-commit@v9 
      with:
        add: '_media/app.css'
        message: 'Compile TailwindCSS for production'