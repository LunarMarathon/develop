# Split the monorepo into readonly branches
# TODO: Some way to preserve commit messages? I'd love to get some help here. 
#       âœ” Done, though it only gets the latest commit. It would be great to have something that handles all commit messages. Or at least says "<commit msg> (and X more [commits]) Maybe this could be done by creating an auto-closing PR listing all the commits since the last merge? Preferably filtered to only contain changes affecting the package.

name: ðŸª“ Split monorepo

on:
  push:
    branches: [ "master" ]

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref_type }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  

  framework: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout hydephp/develop
      uses: actions/checkout@v3
      with:
        path: develop
        persist-credentials: false 

    - name: Checkout hydephp/framework
      uses: actions/checkout@v3
      with:
        # repository: hydephp/framework
        repository: caendesilva/framework-temp
        path: framework
        ref: develop
        fetch-depth: 0
        persist-credentials: false 
    
    - name: Copy over files
      run: cp -rf develop/packages/framework/. framework -v

    - name: Modify readme to test
      run: echo "This is a test" > framework/README.md

    - name: Commit and push changes
      run: |
        cd framework

        git config user.name github-actions
        git config user.email github-actions@github.com
        git remote add upstream https://${{ secrets.PAT }}@github.com/caendesilva/framework-temp.git

        git add .
        git commit -m "${{ github.event.head_commit.message }}"
        # add all previous commits to the commit message
        
        git push upstream develop 
        # || echo "Nothing to commit, but that's okay."