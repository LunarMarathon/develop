# Ensure a consistent state for production releases
name: Prepare for production

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run test suite
        run: vendor/bin/pest

  rebuild-frontend-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress

      - name: Clean _media directory
        run: rm -rf _media && mkdir _media

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
      - name: Install Node dependencies
        run: npm ci
      - name: Build frontend files
        run: npm run prod

      - name: Upload artifacts

        uses: actions/upload-artifact@v3
        with:
          name: "media_assets"
          path: "_site/media"

  propagate-frontend-to-hydefront:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: rebuild-frontend-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}
          repository: hydephp/hydefront

      - name: Download media artifact
        uses: actions/download-artifact@v3
        with:
          name: media_assets
          path: dist

      - name: Create pull request in HydeFront
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}

  create-hyde-merge-pull-request:
    needs: [build-and-test, rebuild-frontend-files]
    runs-on: ubuntu-latest
    # Check if the event is not triggered by a fork
    #if: github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - uses: actions/checkout@v3

      - name: Clean _site directory
        run: rm -rf _site && mkdir _site

      - name: Clean _media directory
        run: rm -rf _media && mkdir _media

      - name: Download media artifact
        uses: actions/download-artifact@v3
        with:
          name: media_assets
          path: /temp/media_assets
      
      - name: Copy compiled app.css
        run: cp temp/media_assets/app.css _media/app.css

      - name: Create Pull Request with the new assets
        uses: peter-evans/create-pull-request@v4
        with:
          # token: ${{ secrets.API_TOKEN_GITHUB }}
          commit-message: Automatic build update
          title: Update frontend assets
          body: Updated default app.css and cleaned the media directories.
          branch: update-frontend
          base: ${{ github.head_ref }}
